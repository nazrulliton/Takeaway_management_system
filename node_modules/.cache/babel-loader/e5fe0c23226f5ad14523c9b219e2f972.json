{"ast":null,"code":"var _jsxFileName = \"/Users/Naz/Desktop/projects/star_game/3five/lucky_chen/lucky_chin/src/containers/inventory/InventoryContainer.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport InventoryList from '../../components/inventory/InventoryList.js';\nimport ItemEditForm from '../../components/inventory/ItemEditForm.js';\nimport InventoryCreateForm from '../../components/inventory/InventoryCreateForm.js';\nimport ConfirmDelete from '../../components/inventory/ConfirmDelete.js';\nimport Request from '../../helpers/request.js'; // import Item from '../../components/suppliers/SupplierList.js';\n\nclass InventoryContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inventory: [{\n        \"name\": \"carrots\",\n        \"quantity\": 5,\n        \"dateOfPurchase\": \"4/4/20\",\n        \"expiryDate\": \"4/5/20\",\n        \"purchasePrice\": 20.05,\n        \"supplierID\": 2,\n        \"id\": 1\n      }, {\n        \"name\": \"wraps\",\n        \"quantity\": 7,\n        \"dateOfPurchase\": \"4/4/20\",\n        \"expiryDate\": \"4/5/20\",\n        \"purchasePrice\": 8.70,\n        \"supplierID\": 1,\n        \"id\": 2\n      }, {\n        \"name\": \"rice\",\n        \"quantity\": 2,\n        \"dateOfPurchase\": \"4/4/20\",\n        \"expiryDate\": \"4/5/20\",\n        \"purchasePrice\": 12.60,\n        \"supplierID\": 1,\n        \"id\": 3\n      }]\n    };\n    this.findItemById = this.findItemById.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handlePost = this.handlePost.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  findItemById(id) {\n    return this.state.inventory.find(item => {\n      return item.id === parseInt(id);\n    });\n  }\n\n  handleDelete(id) {\n    let inventoryState = this.state.inventory;\n    let itemIndex = inventoryState.findIndex(element => {\n      return element.id === id;\n    });\n    inventoryState.splice(itemIndex, 1);\n    this.setState({\n      inventory: inventoryState\n    });\n    console.log(inventoryState); // *FOR DB*\n    // const request = new Request();\n    // const url = '/pirates/' + id;\n    // request.delete(url).then(() => {\n    //   window.location = '/pirates';\n    // });\n  }\n\n  handlePost(payload) {\n    let inventoryState = this.state.inventory;\n    let newState = [...inventoryState, payload];\n    this.setState({\n      inventory: newState\n    }); // *FOR DB*\n    // const request = new Request();\n    // request.post('/pirates', pirate).then(() => {\n    //   window.location = '/pirates'\n    // })\n  }\n\n  handleUpdate(id, item) {\n    //does method have to return anything❓\n    //*FIND INDEX OF ITEM.\n    let inventoryState = this.state.inventory;\n    let itemIndex = inventoryState.findIndex(element => {\n      return element.id === id;\n    }); // *CHANGE IT.\n\n    inventoryState[itemIndex] = item;\n    this.setState({\n      inventory: inventoryState\n    }); //---------------------------------------------------------------------------------------------//\n    // ARESKY: navigation component. global state management using redux.\n    // redirect tag.\n    //---------------------------------------------------------------------------------------------//\n    // *FOR DB*\n    // const request = new Request;\n    // request.patch('/inventory/' + id, item).then(() => { //how a function works - not needing to return anything here.\n    //   window.location = '/pirates/' + id\n    // })\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \"Inventory\"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/inventory/new\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(InventoryCreateForm, {\n          onFormSubmit: this.handlePost,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 18\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/inventory/:id/edit\",\n      render: props => {\n        const id = props.match.params.id;\n        const item = this.findItemById(id);\n        return /*#__PURE__*/React.createElement(ItemEditForm, {\n          item: item,\n          onUpdate: this.handleUpdate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/inventory/:id/delete\",\n      render: props => {\n        const id = props.match.params.id;\n        const item = this.findItemById(id);\n        return /*#__PURE__*/React.createElement(ConfirmDelete, {\n          item: item,\n          onDelete: this.handleDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 16\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      render: props => {\n        return /*#__PURE__*/React.createElement(InventoryList, {\n          inventory: this.state.inventory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 18\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default InventoryContainer;","map":{"version":3,"sources":["/Users/Naz/Desktop/projects/star_game/3five/lucky_chen/lucky_chin/src/containers/inventory/InventoryContainer.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","InventoryList","ItemEditForm","InventoryCreateForm","ConfirmDelete","Request","InventoryContainer","constructor","props","state","inventory","findItemById","bind","handleUpdate","handlePost","handleDelete","id","find","item","parseInt","inventoryState","itemIndex","findIndex","element","splice","setState","console","log","payload","newState","render","match","params"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport InventoryList from '../../components/inventory/InventoryList.js';\nimport ItemEditForm from '../../components/inventory/ItemEditForm.js';\nimport InventoryCreateForm from '../../components/inventory/InventoryCreateForm.js';\nimport ConfirmDelete from '../../components/inventory/ConfirmDelete.js';\n\nimport Request from '../../helpers/request.js'\n// import Item from '../../components/suppliers/SupplierList.js';\n\nclass InventoryContainer extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      inventory: [\n        {\"name\": \"carrots\", \"quantity\": 5, \"dateOfPurchase\": \"4/4/20\", \"expiryDate\": \"4/5/20\", \"purchasePrice\": 20.05, \"supplierID\": 2, \"id\": 1},\n        {\"name\": \"wraps\", \"quantity\": 7, \"dateOfPurchase\": \"4/4/20\", \"expiryDate\": \"4/5/20\", \"purchasePrice\": 8.70, \"supplierID\": 1, \"id\": 2},\n        {\"name\": \"rice\", \"quantity\": 2, \"dateOfPurchase\": \"4/4/20\", \"expiryDate\": \"4/5/20\", \"purchasePrice\": 12.60, \"supplierID\": 1, \"id\": 3}\n      ]\n    }\n    this.findItemById = this.findItemById.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handlePost = this.handlePost.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  findItemById(id){\n    return this.state.inventory.find((item) => {\n      return item.id === parseInt(id);\n    });\n  }\n\n  handleDelete(id){\n    let inventoryState = this.state.inventory;\n    let itemIndex = inventoryState.findIndex((element) => {\n      return element.id === id;\n    });\n    inventoryState.splice(itemIndex, 1);\n    this.setState({inventory: inventoryState})\n    console.log(inventoryState);\n    // *FOR DB*\n    // const request = new Request();\n    // const url = '/pirates/' + id;\n    // request.delete(url).then(() => {\n    //   window.location = '/pirates';\n    // });\n  }\n\n  handlePost(payload){\n    let inventoryState = this.state.inventory;\n    let newState = [...inventoryState, payload];\n    this.setState({inventory: newState})\n    // *FOR DB*\n    // const request = new Request();\n    // request.post('/pirates', pirate).then(() => {\n    //   window.location = '/pirates'\n    // })\n  }\n\n  handleUpdate(id, item){ //does method have to return anything❓\n    //*FIND INDEX OF ITEM.\n    let inventoryState = this.state.inventory;\n    let itemIndex = inventoryState.findIndex((element) => {\n      return element.id === id;\n    });\n    // *CHANGE IT.\n    inventoryState[itemIndex] = item;\n    this.setState({inventory: inventoryState})\n//---------------------------------------------------------------------------------------------//\n// ARESKY: navigation component. global state management using redux.\n// redirect tag.\n//---------------------------------------------------------------------------------------------//\n    // *FOR DB*\n    // const request = new Request;\n    // request.patch('/inventory/' + id, item).then(() => { //how a function works - not needing to return anything here.\n    //   window.location = '/pirates/' + id\n    // })\n  }\n\n  render(){\n    return(\n      <Router>\n      <>\n      <h1>Inventory</h1>\n      <Switch>\n\n        <Route exact path = \"/inventory/new\" render={() => {\n          return <InventoryCreateForm onFormSubmit={this.handlePost} />\n        }}/>\n\n        <Route exact path=\"/inventory/:id/edit\" render={(props) => {\n        const id = props.match.params.id\n        const item = this.findItemById(id);\n        return <ItemEditForm item={item} onUpdate={this.handleUpdate} />\n        }}/>\n\n        <Route exact path=\"/inventory/:id/delete\" render={(props) =>{\n        const id = props.match.params.id\n        const item = this.findItemById(id);\n        return <ConfirmDelete item={item} onDelete={this.handleDelete} />\n        }}/>\n\n        <Route render = {(props) => {\n          return <InventoryList inventory={this.state.inventory}/>\n        }}/>\n\n      </Switch>\n      </>\n      </Router>\n    )\n  }\n\n}\n\nexport default InventoryContainer;\n"]},"metadata":{},"sourceType":"module"}