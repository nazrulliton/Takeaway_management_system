{"ast":null,"code":"var _jsxFileName = \"/Users/Naz/Desktop/projects/star_game/3five/lucky_chen/lucky_chin/src/containers/inventory/InventoryContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport InventoryList from '../../components/inventory/InventoryList.js';\nimport ItemEditForm from '../../components/inventory/ItemEditForm.js';\nimport InventoryCreateForm from '../../components/inventory/InventoryCreateForm.js';\nimport ConfirmDelete from '../../components/inventory/ConfirmDelete.js';\nimport Request from '../../helpers/request.js'; // import Item from '../../components/suppliers/SupplierList.js';\n\nconst InventoryContainer = props => {\n  const [inventory, setInventory] = useState(null);\n\n  function findItemById(id) {\n    return inventory.find(item => {\n      return item.id === parseInt(id);\n    });\n  }\n\n  function handleDelete(id) {\n    let inventoryState = inventory;\n    let itemIndex = inventoryState.findIndex(element => {\n      return element.id === id;\n    });\n    inventoryState.splice(itemIndex, 1);\n    setInventory(inventoryState); // *FOR DB*\n    // const request = new Request();\n    // const url = '/pirates/' + id;\n    // request.delete(url).then(() => {\n    //   window.location = '/pirates';\n    // });\n  }\n\n  function handlePost(payload) {\n    let inventoryState = inventory;\n    let newState = [...inventoryState, payload];\n    setInventory(newState); // *FOR DB*\n    // const request = new Request();\n    // request.post('/pirates', pirate).then(() => {\n    //   window.location = '/pirates'\n    // })\n  }\n\n  function handleUpdate(id, item) {\n    //*FIND INDEX OF ITEM.\n    let inventoryState = inventory;\n    let itemIndex = inventoryState.findIndex(element => {\n      return element.id === id;\n    }); // *CHANGE IT.\n\n    inventoryState[itemIndex] = item;\n    setInventory(inventoryState); //---------------------------------------------------------------------------------------------//\n    // ARESKY: navigation component. global state management using redux.\n    // redirect tag.\n    //---------------------------------------------------------------------------------------------//\n    // *FOR DB*\n    // const request = new Request;\n    // request.patch('/inventory/' + id, item).then(() => { //how a function works - not needing to return anything here.\n    //   window.location = '/pirates/' + id\n    // })\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Inventory\"), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/inventory/new\",\n    render: () => {\n      return /*#__PURE__*/React.createElement(InventoryCreateForm, {\n        onFormSubmit: handlePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 18\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/inventory/:id/edit\",\n    render: props => {\n      const id = props.match.params.id;\n      const item = findItemById(id);\n      return /*#__PURE__*/React.createElement(ItemEditForm, {\n        item: item,\n        onUpdate: handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/inventory/:id/delete\",\n    render: props => {\n      const id = props.match.params.id;\n      const item = findItemById(id);\n      return /*#__PURE__*/React.createElement(ConfirmDelete, {\n        item: item,\n        onDelete: handleDelete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    render: props => {\n      return /*#__PURE__*/React.createElement(InventoryList, {\n        inventory: inventory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 18\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default InventoryContainer;","map":{"version":3,"sources":["/Users/Naz/Desktop/projects/star_game/3five/lucky_chen/lucky_chin/src/containers/inventory/InventoryContainer.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","InventoryList","ItemEditForm","InventoryCreateForm","ConfirmDelete","Request","InventoryContainer","props","inventory","setInventory","findItemById","id","find","item","parseInt","handleDelete","inventoryState","itemIndex","findIndex","element","splice","handlePost","payload","newState","handleUpdate","match","params"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport InventoryList from '../../components/inventory/InventoryList.js';\nimport ItemEditForm from '../../components/inventory/ItemEditForm.js';\nimport InventoryCreateForm from '../../components/inventory/InventoryCreateForm.js';\nimport ConfirmDelete from '../../components/inventory/ConfirmDelete.js';\n\nimport Request from '../../helpers/request.js'\n// import Item from '../../components/suppliers/SupplierList.js';\n\n \nconst InventoryContainer = (props) => {\n\n  const [inventory,setInventory] = useState(null)\n\n\n      \n\n\n\n\n  function findItemById(id){\n    return inventory.find((item) => {\n      return item.id === parseInt(id);\n    });\n  }\n\n  function handleDelete(id){\n    let inventoryState =  inventory;\n    let itemIndex = inventoryState.findIndex((element) => {\n      return element.id === id;\n    });\n    inventoryState.splice(itemIndex, 1);\n      setInventory(inventoryState)\n    // *FOR DB*\n    // const request = new Request();\n    // const url = '/pirates/' + id;\n    // request.delete(url).then(() => {\n    //   window.location = '/pirates';\n    // });\n  }\n\n  function handlePost(payload){\n    let inventoryState =  inventory;\n    let newState = [...inventoryState, payload];\n      setInventory(newState)\n    // *FOR DB*\n    // const request = new Request();\n    // request.post('/pirates', pirate).then(() => {\n    //   window.location = '/pirates'\n    // })\n  }\n\n  function handleUpdate(id, item){\n    //*FIND INDEX OF ITEM.\n    let inventoryState =  inventory;\n    let itemIndex = inventoryState.findIndex((element) => {\n      return element.id === id;\n    });\n    // *CHANGE IT.\n    inventoryState[itemIndex] = item;\n      setInventory(inventoryState)\n//---------------------------------------------------------------------------------------------//\n// ARESKY: navigation component. global state management using redux.\n// redirect tag.\n//---------------------------------------------------------------------------------------------//\n    // *FOR DB*\n    // const request = new Request;\n    // request.patch('/inventory/' + id, item).then(() => { //how a function works - not needing to return anything here.\n    //   window.location = '/pirates/' + id\n    // })\n  }\n\n\n    return(\n      <Router>\n      <>\n      <h1>Inventory</h1>\n      <Switch>\n\n        <Route exact path = \"/inventory/new\" render={() => {\n          return <InventoryCreateForm onFormSubmit={ handlePost} />\n        }}/>\n\n        <Route exact path=\"/inventory/:id/edit\" render={(props) => {\n        const id = props.match.params.id\n        const item = findItemById(id);\n        return <ItemEditForm item={item} onUpdate={ handleUpdate} />\n        }}/>\n\n        <Route exact path=\"/inventory/:id/delete\" render={(props) =>{\n        const id = props.match.params.id\n        const item =  findItemById(id);\n        return <ConfirmDelete item={item} onDelete={ handleDelete} />\n        }}/>\n\n        <Route render = {(props) => {\n          return <InventoryList inventory={ inventory}/>\n        }}/>\n\n      </Switch>\n      </>\n      </Router>\n    )\n  \n\n}\n\nexport default InventoryContainer;\n"]},"metadata":{},"sourceType":"module"}